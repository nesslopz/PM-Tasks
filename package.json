{
  "name": "pm-tasks",
  "displayName": "PM Tasks",
  "description": "Project Manager tasks integration with VSCode",
  "publisher": "nesslopz",
  "version": "0.1.0",
  "license": "ISC",
  "preview": true,
  "icon": "resources/icon.png",
  "engines": {
    "vscode": "^1.35.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Project Managment",
    "To-DO Tasks",
    "Teamwork",
    "Tasklist",
    "Projects"
  ],
  "activationEvents": [
    "onView:PMTaskList",
    "onCommand:PMTaskList.addTask",
    "onCommand:PMTaskList.config",
    "workspaceContains:./.vscode/settings.json"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "PMTasksView",
          "title": "PM Tasks",
          "icon": "resources/pm-tasks.svg"
        }
      ]
    },
    "views": {
      "PMTasksView": [
        {
          "id": "PMTaskList",
          "name": "All"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "PMTaskList.config",
          "group": "navigation",
          "when": "view == PMTaskList && !isProjectConfigured"
        },
        {
          "command": "PMTaskList.addTask",
          "group": "navigation",
          "when": "view == PMTaskList && isProjectConfigured"
        },
        {
          "command": "PMTaskList.addProject",
          "when": "view == PMTaskList && isProjectConfigured"
        },
        {
          "command": "PMTaskList.refreshTasklist",
          "group": "navigation",
          "when": "view == PMTaskList && isProjectConfigured && !config.pm.autoSync"
        }
      ],
      "view/item/context": [
        {
          "command": "PMTask.completeTask",
          "when": "view == PMTaskList && viewItem == task",
          "group": "inline"
        },
        {
          "command": "PMTask.viewTask",
          "when": "view == PMTaskList && viewItem == parentTask",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "command": "PMTaskList.addTask",
        "title": "New Task",
        "category": "PM Tasks",
        "icon": {
          "dark": "resources/dark/add.svg",
          "light": "resources/light/add.svg"
        }
      },
      {
        "command": "PMTaskList.config",
        "title": "Configure Project",
        "category": "PM Tasks",
        "icon": {
          "dark": "resources/dark/settings.svg",
          "light": "resources/light/settings.svg"
        }
      },
      {
        "command": "PMTaskList.addProject",
        "title": "Add Project",
        "category": "PM Tasks",
        "icon": {
          "dark": "resources/dark/settings.svg",
          "light": "resources/light/settings.svg"
        }
      },
      {
        "command": "PMTaskList.refreshTasklist",
        "title": "Refresh Tasklist",
        "category": "PM Tasks",
        "icon": {
          "dark": "resources/dark/refresh.svg",
          "light": "resources/light/refresh.svg"
        }
      },
      {
        "command": "PMTask.completeTask",
        "title": "Mark as completed",
        "category": "PM Tasks",
        "icon": {
          "dark": "resources/dark/check.svg",
          "light": "resources/light/check.svg"
        }
      },
      {
        "command": "PMTask.viewTask",
        "title": "View details",
        "category": "PM Tasks",
        "icon": {
          "dark": "resources/dark/arrow-right.svg",
          "light": "resources/light/arrow-right.svg"
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "PM Tasks",
      "properties": {
        "pm.taskList": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "items": {
            "type": "object",
            "required": [
              "id",
              "label",
              "projectManager"
            ],
            "properties": {
              "projectManager": {
                "type": "string",
                "markdownDescription": "ID for Project Managment software _(available in config list selector)_",
                "enum": [
                  "teamwork"
                ]
              },
              "id": {
                "type": "string",
                "markdownDescription": "ID for taskList"
              },
              "label": {
                "type": "string",
                "markdownDescription": "Label to show in TaskList Tree"
              },
              "projectId": {
                "type": "string",
                "markdownDescription": "ID for Project"
              },
              "projectName": {
                "type": "string",
                "markdownDescription": "Project's Name"
              }
            }
          },
          "markdownDescription": "Task List configuration to save in Workspace `recomended` "
        },
        "pm.teamworkToken": {
          "type": "string",
          "default": null,
          "description": "Your Teamwork token to enable and use it"
        },
        "pm.onlyMine": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Get only `assigned to me` Tasks "
        },
        "pm.autoSync": {
          "type": "boolean",
          "default": true,
          "description": "Auto Sync tasks"
        },
        "pm.groupTasksByProject": {
          "type": "boolean",
          "default": true,
          "description": "Group taskslists in Project tree"
        },
        "pm.nestSubTasks": {
          "type": "boolean",
          "default": true,
          "description": "Nest SubTasks"
        },
        "pm.sortBy": {
          "type": "string",
          "default": "duedate",
          "description": "Order tasks in Project tree",
          "enum": [
            "duedate",
            "duedateDESC",
            "startdate",
            "dateadded",
            "priority",
            "project",
            "duestartdate",
            "duestartdatedesc",
            "dateupdated"
          ],
          "enumDescriptions": [
            "Due date",
            "Due date DESC",
            "Start date",
            "Added",
            "Priority",
            "Project",
            "Due start date",
            "Due start date DESC",
            "Date updated"
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.42",
    "@types/moment": "^2.13.0",
    "@types/node": "^10.17.4",
    "@types/showdown": "^1.9.1",
    "eslint": "^5.16.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-node": "^9.2.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "tslint": "^5.20.1",
    "typescript": "^3.7.2",
    "vscode": "^1.1.36"
  },
  "bugs": {
    "url": "https://github.com/nesslopz/PM-Tasks/issues",
    "email": "n@nesslopz.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nesslopz/PM-Tasks.git"
  },
  "homepage": "https://github.com/nesslopz/PM-Tasks/blob/master/README.md",
  "dependencies": {
    "moment": "^2.24.0",
    "request-light": "^0.2.5",
    "showdown": "^1.9.1"
  }
}
